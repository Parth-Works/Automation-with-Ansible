---

- hosts: all
  gather_facts: yes

- name: HAproxy Configuration 
  hosts: HAproxy
  become: yes

  tasks:
      - name: install HAproxy
        apt:
          name: haproxy
          state: present
          update_cache: true
  
      - name: gathering ip addresses
        setup:
          filter: ansible_default_ipv4.address

      - name: copying HAproxy configuration file - haproxy.cfg
        template:
          src: haproxy.cfg.j2
          dest: "/etc/haproxy/haproxy.cfg"
        notify:
          - restart haproxy


      - name: install Nginx
        apt:
          name: nginx
          state: latest
          update_cache: true

      - name: install snmp, snmp-mibs-downloader
        apt:
          update_cache: true
          name: [ 'snmp', 'snmp-mibs-downloader' ]
          state: latest

      - name: copying snmp configuration file - snmp.conf
        template:
          src: snmp.conf.j2
          dest: "/etc/snmp/snmp.conf"

      - name: copying nginx configuration file for UDP loadbalancing - nginx.conf
        template:
          src: nginx.conf.j2
          dest: "/etc/nginx/nginx.conf"

      - name: nginx restart
        service:
          name: nginx
          state: restarted   
         
  handlers:  
      - name: restart haproxy
        service:
          name: haproxy
          state: restarted 


- name: Webservers Configuration
  hosts: webservers
  become: yes

  tasks:
      - name: install pip
        apt:
          name: python3-pip
          state: present

      - name: install flask
        pip:
          executable: pip3
          name: flask
          state: latest
          
      - name: creating new directory for flask-app
        file:
          path: "/home/flask-app/"
          state: directory

      - name: install gunicorn
        pip:
          executable: pip3
          name: gunicorn
          state: latest

      - name: install snmpd
        apt:
          name: snmpd
          state: present
          update_cache: true

      - name: copying the server response file - app.py
        template:
          src: application2.py
          dest: "/home/flask-app/app.py"

      - name: copying snmpd configuration file - snmpd.conf
        template:
          src: snmpd.conf.j2
          dest: "/etc/snmp/snmpd.conf"

      - name: restarting snmpd
        service:
          name: snmpd
          state: restarted
          enabled: yes

      - name: run flask app
        shell: |
          cd /home/flask-app/ 
          gunicorn --bind 0.0.0.0:80 app:app&

